# Cli Version: 1.3.5

name: $(Date:yyyy).$(Date:MM).$(Date:dd)$(Rev:.r)

trigger:
  batch: true
  branches:
    include:
    - master

pr:
  - master

pool:
  name: Default

parameters:
  - name: Tag
    default: $(Build.BuildNumber)

variables:  
  BuildConfiguration: 'Release'
  ArtifactStagingDirectory: '$(Build.ArtifactStagingDirectory)'
  ArtifactName: 'drop'

stages:
  - stage: build
    displayName: Build and test
    jobs:
      - job: waitForValidation
        displayName: Wait for external validation
        timeoutInMinutes: 4320
        pool: server
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 4320
          inputs:
            notifyUsers: |
              tomasz.a.zmuda@gmail.com
            onTimeout: 'reject'
      - job: run_tests
        timeoutInMinutes: 60
        dependsOn: waitForValidation
        displayName: Run tests
        steps:
          - task: UseDotNet@2
            displayName: 'Set .NET Core to 3.1'
            inputs:
              packageType: sdk
              version: 3.1.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: DotNetCoreCLI@2
            displayName: 'dotnet test'
            inputs:
              command: test
              projects: '**/Xabe.FFmpeg.Test.csproj'
              arguments: '-c ${{ variables.BuildConfiguration }} -v=normal'
              publishTestResults: true  
      - job: run_downloader_tests
        timeoutInMinutes: 60
        dependsOn: waitForValidation
        displayName: Run downloader tests
        steps:
          - task: UseDotNet@2
            displayName: 'Set .NET Core to 3.1'
            inputs:
              packageType: sdk
              version: 3.1.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: DotNetCoreCLI@2
            displayName: 'dotnet test'
            inputs:
              command: test
              projects: '**/Xabe.FFmpeg.Downloader.Test.csproj'
              arguments: '-c ${{ variables.BuildConfiguration }} -v=normal'
              publishTestResults: true
      - job: build_artifacts
        timeoutInMinutes: 60
        dependsOn: waitForValidation
        displayName: Build artifacts
        steps:
          - task: UseDotNet@2
            displayName: 'Set .NET Core to 3.1'
            inputs:
              packageType: sdk
              version: 3.1.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - powershell: |
              echo ${{ parameters.Tag }}
              dotnet build -c ${{ variables.BuildConfiguration }} -p:Version=${{ parameters.Tag }} /p:GenerateDocumentationFile=true
            failOnStderr: true
            workingDirectory: ./src/Xabe.FFmpeg
            displayName: 'Dotnet build'
          - powershell: |
              dotnet pack --no-build -c ${{ variables.BuildConfiguration }} -o ${{ variables.ArtifactStagingDirectory }} /p:PackageVersion=${{ parameters.Tag }} /p:GenerateDocumentationFile=true
            failOnStderr: true
            workingDirectory: ./src/Xabe.FFmpeg
            displayName: 'Dotnet pack'
          - powershell: |
              dotnet build -c ${{ variables.BuildConfiguration }} -p:Version=${{ parameters.Tag }} /p:GenerateDocumentationFile=true
            failOnStderr: true
            workingDirectory: ./src/Xabe.FFmpeg.Downloader
            displayName: 'Dotnet build downloader'
          - powershell: |
              dotnet pack --no-build -c ${{ variables.BuildConfiguration }} -o ${{ variables.ArtifactStagingDirectory }} /p:PackageVersion=${{ parameters.Tag }} /p:GenerateDocumentationFile=true
            failOnStderr: true
            workingDirectory: ./src/Xabe.FFmpeg.Downloader
            displayName: 'Dotnet pack downloader'
          - publish: ${{ variables.ArtifactStagingDirectory }}
            artifact: '${{ variables.ArtifactName }}'


  - stage: test_release
    displayName: "Deploy to test feed"
    condition: succeeded()
    jobs:
      - job:
        workspace:
          clean: all
        displayName: Release to test feed
        steps:
          - download: current
          - task: UseDotNet@2
            displayName: 'Set .NET Core to 3.1'
            inputs:
              packageType: sdk
              version: 3.1.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: DotNetCoreCLI@2
            displayName: 'dotnet push'
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/${{ variables.ArtifactName }}/*.nupkg'
              publishVstsFeed: 'f3a8b4d1-7ce4-4c40-9082-08c3837e956f/71024cca-1bc3-4497-b7a5-2463315f77c5'
            
  - stage: prod_release
    displayName: "Deploy to NuGet"
    condition: and(and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')), ne('${{ parameters.Tag }}', '$(Build.BuildNumber)'))
    jobs:
      - job:
        workspace:
          clean: all
        steps:
          - download: current
          - task: UseDotNet@2
            displayName: 'Set .NET Core to 3.1'
            inputs:
              packageType: sdk
              version: 3.1.x
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - task: NuGetCommand@2
            displayName: 'dotnet push'
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/${{ variables.ArtifactName }}/*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'Xabe.FFmpeg prod'